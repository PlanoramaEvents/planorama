#
# XML template for a collection of sessions
#
# TODO:
xml.schedule {
  # We need a <day> header at the start of the document, so
  # before_1st_session needs to be at least 86400 seconds (the
  # number of seconds in a day) earlier than the 1st session
  before_1st_session = @instance.first.start_time - 86401
  day = Date.parse(before_1st_session.strftime("%Y-%m-%d"))
  timeslot = Time.parse(before_1st_session.strftime("%Y-%m-%d %l:%M"))
  @instance.each do |session|
    # Check if this is the 1st session of the day, in which case,
    # create a <day> heading.
    this_day = Date.parse(session.start_time.strftime("%Y-%m-%d"))
    if this_day > day
      day = this_day
      xml.day(session.start_time.strftime("%A"))
    end
    # Check if this is the 1st session at this time, in which case,
    # create a <timeslot> subheading.
    if session.start_time.utc > timeslot.utc
      timeslot = session.start_time.utc
      xml.timeslot(session.start_time.strftime("%-l:%M"))
    end
    xml.session {
      xml.id(session.pub_reference_number)
      xml.title(session.title)
      # timeduration, roomareasformat, and participants will each be a
      # block-level paragraph with span-level elements. The line
      # breaks & spacing will be removed in publications_controller.rb.
      # Otherwise InDesign would render the white space in print.
      xml.timeduration{
        xml.start_time(session.start_time.strftime("%-l:%M"))
        xml.duration(session.duration)
      }
      xml.roomareasformattags{
        session.environment == 'virtual' ? xml.virtual(session.room.name) : xml.room(session.room.name)
        xml.areas(session.area_list.join(", "))
        if session.format
          !session.area_list.include?(session.format.name) ? xml.format(session.format.name) : ""
        end
        session.streamed ? xml.streamed("- Livestream") : ""
        session.recorded ? xml.recorded("- Recorded") : ""
        xml.tags(session.tag_list.join(", "))
      }
      xml.description(session.description)
      # If there are no visible participants, do not create an empty
      # <participants> element, because InDesign would render that
      # as an empty space.
      non_invisible = session.participant_assignments.map {
        |assignment| assignment.session_assignment_role_type.name != 'Invisible'
      }
      if non_invisible.length > 0
        xml.participants {
          session.participant_assignments.each do |assignment|
            xml.person {
              xml.name(assignment.person.published_name)
              if assignment.session_assignment_role_type.name == 'Moderator'
                xml.role("(#{assignment.session_assignment_role_type.name})")
              end
            }
          end
        }
      end
    }
  end
}
